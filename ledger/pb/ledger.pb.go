// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ledger.proto

package ledger

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LatestPNRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatestPNRequest) Reset()         { *m = LatestPNRequest{} }
func (m *LatestPNRequest) String() string { return proto.CompactTextString(m) }
func (*LatestPNRequest) ProtoMessage()    {}
func (*LatestPNRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{0}
}

func (m *LatestPNRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatestPNRequest.Unmarshal(m, b)
}
func (m *LatestPNRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatestPNRequest.Marshal(b, m, deterministic)
}
func (m *LatestPNRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatestPNRequest.Merge(m, src)
}
func (m *LatestPNRequest) XXX_Size() int {
	return xxx_messageInfo_LatestPNRequest.Size(m)
}
func (m *LatestPNRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LatestPNRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LatestPNRequest proto.InternalMessageInfo

type LatestPNResponse struct {
	Epoch                uint64   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatestPNResponse) Reset()         { *m = LatestPNResponse{} }
func (m *LatestPNResponse) String() string { return proto.CompactTextString(m) }
func (*LatestPNResponse) ProtoMessage()    {}
func (*LatestPNResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{1}
}

func (m *LatestPNResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatestPNResponse.Unmarshal(m, b)
}
func (m *LatestPNResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatestPNResponse.Marshal(b, m, deterministic)
}
func (m *LatestPNResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatestPNResponse.Merge(m, src)
}
func (m *LatestPNResponse) XXX_Size() int {
	return xxx_messageInfo_LatestPNResponse.Size(m)
}
func (m *LatestPNResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LatestPNResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LatestPNResponse proto.InternalMessageInfo

func (m *LatestPNResponse) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *LatestPNResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type CommitPulseRequest struct {
	Entropy              []byte   `protobuf:"bytes,2,opt,name=entropy,proto3" json:"entropy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitPulseRequest) Reset()         { *m = CommitPulseRequest{} }
func (m *CommitPulseRequest) String() string { return proto.CompactTextString(m) }
func (*CommitPulseRequest) ProtoMessage()    {}
func (*CommitPulseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{2}
}

func (m *CommitPulseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitPulseRequest.Unmarshal(m, b)
}
func (m *CommitPulseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitPulseRequest.Marshal(b, m, deterministic)
}
func (m *CommitPulseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitPulseRequest.Merge(m, src)
}
func (m *CommitPulseRequest) XXX_Size() int {
	return xxx_messageInfo_CommitPulseRequest.Size(m)
}
func (m *CommitPulseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitPulseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitPulseRequest proto.InternalMessageInfo

func (m *CommitPulseRequest) GetEntropy() []byte {
	if m != nil {
		return m.Entropy
	}
	return nil
}

type CommitPulseResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitPulseResponse) Reset()         { *m = CommitPulseResponse{} }
func (m *CommitPulseResponse) String() string { return proto.CompactTextString(m) }
func (*CommitPulseResponse) ProtoMessage()    {}
func (*CommitPulseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{3}
}

func (m *CommitPulseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitPulseResponse.Unmarshal(m, b)
}
func (m *CommitPulseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitPulseResponse.Marshal(b, m, deterministic)
}
func (m *CommitPulseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitPulseResponse.Merge(m, src)
}
func (m *CommitPulseResponse) XXX_Size() int {
	return xxx_messageInfo_CommitPulseResponse.Size(m)
}
func (m *CommitPulseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitPulseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitPulseResponse proto.InternalMessageInfo

func (m *CommitPulseResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*LatestPNRequest)(nil), "ledger.LatestPNRequest")
	proto.RegisterType((*LatestPNResponse)(nil), "ledger.LatestPNResponse")
	proto.RegisterType((*CommitPulseRequest)(nil), "ledger.CommitPulseRequest")
	proto.RegisterType((*CommitPulseResponse)(nil), "ledger.CommitPulseResponse")
}

func init() { proto.RegisterFile("ledger.proto", fileDescriptor_63585974d4c6a2c4) }

var fileDescriptor_63585974d4c6a2c4 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x35, 0xa2, 0x11, 0xc7, 0x82, 0x9a, 0x0a, 0x0d, 0xeb, 0xa5, 0xe4, 0xb4, 0x20, 0xe4, 0xa0,
	0x77, 0x0f, 0x5b, 0x44, 0x90, 0x22, 0x21, 0x7f, 0x50, 0xd7, 0xa1, 0x16, 0xb3, 0x9d, 0x98, 0xa4,
	0xa0, 0x9f, 0xe2, 0xdf, 0x8a, 0xc9, 0x2e, 0x56, 0xeb, 0xf1, 0xcd, 0xbc, 0x79, 0x6f, 0xde, 0x0c,
	0x8c, 0x1c, 0x3e, 0x2f, 0x31, 0x68, 0x1f, 0x28, 0x91, 0xe0, 0x05, 0xa9, 0x73, 0x38, 0x9d, 0x2f,
	0x12, 0xc6, 0x64, 0x1e, 0x2d, 0xbe, 0x6d, 0x30, 0x26, 0x75, 0x0b, 0x67, 0x3f, 0xa5, 0xe8, 0x69,
	0x1d, 0x51, 0x5c, 0xc0, 0x21, 0x7a, 0x6a, 0x5f, 0x24, 0x9b, 0xb2, 0xfa, 0xc0, 0x16, 0x90, 0xab,
	0x21, 0x50, 0x90, 0xfb, 0x53, 0x56, 0x1f, 0xdb, 0x02, 0x94, 0x06, 0x31, 0xa3, 0xae, 0x5b, 0x25,
	0xb3, 0x71, 0x11, 0x7b, 0x55, 0x21, 0xe1, 0x08, 0xd7, 0x29, 0x90, 0xff, 0xc8, 0xec, 0x91, 0x1d,
	0xa0, 0xba, 0x82, 0xf1, 0x2f, 0xfe, 0x96, 0x65, 0x16, 0x67, 0x5b, 0xe2, 0xd7, 0x9f, 0x0c, 0xf8,
	0x3c, 0xaf, 0x2e, 0x66, 0xc0, 0xcb, 0x9c, 0xa8, 0x74, 0x9f, 0x6d, 0xd7, 0xb7, 0xba, 0xfc, 0xb7,
	0x57, 0x3c, 0xd4, 0x9e, 0x78, 0x80, 0xf1, 0x3d, 0xa6, 0x92, 0xb7, 0x71, 0xd4, 0xbe, 0xde, 0xe5,
	0x64, 0x93, 0x61, 0xea, 0xcf, 0x71, 0x2a, 0xb9, 0xdb, 0x18, 0xb4, 0x9a, 0x1a, 0x26, 0x2b, 0xd2,
	0xcb, 0xe0, 0x5b, 0x8d, 0xef, 0x8b, 0xce, 0x3b, 0x8c, 0x3d, 0xbb, 0x39, 0x29, 0x3b, 0x9b, 0xef,
	0xdb, 0x1b, 0xf6, 0xc4, 0xf3, 0x13, 0x6e, 0xbe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x55, 0xa6, 0x77,
	0x19, 0x94, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LedgerClient is the client API for Ledger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LedgerClient interface {
	Commit(ctx context.Context, in *CommitPulseRequest, opts ...grpc.CallOption) (*CommitPulseResponse, error)
	GetLatestBlockEpoch(ctx context.Context, in *LatestPNRequest, opts ...grpc.CallOption) (*LatestPNResponse, error)
}

type ledgerClient struct {
	cc *grpc.ClientConn
}

func NewLedgerClient(cc *grpc.ClientConn) LedgerClient {
	return &ledgerClient{cc}
}

func (c *ledgerClient) Commit(ctx context.Context, in *CommitPulseRequest, opts ...grpc.CallOption) (*CommitPulseResponse, error) {
	out := new(CommitPulseResponse)
	err := c.cc.Invoke(ctx, "/ledger.Ledger/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ledgerClient) GetLatestBlockEpoch(ctx context.Context, in *LatestPNRequest, opts ...grpc.CallOption) (*LatestPNResponse, error) {
	out := new(LatestPNResponse)
	err := c.cc.Invoke(ctx, "/ledger.Ledger/GetLatestBlockEpoch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LedgerServer is the server API for Ledger service.
type LedgerServer interface {
	Commit(context.Context, *CommitPulseRequest) (*CommitPulseResponse, error)
	GetLatestBlockEpoch(context.Context, *LatestPNRequest) (*LatestPNResponse, error)
}

// UnimplementedLedgerServer can be embedded to have forward compatible implementations.
type UnimplementedLedgerServer struct {
}

func (*UnimplementedLedgerServer) Commit(ctx context.Context, req *CommitPulseRequest) (*CommitPulseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Commit not implemented")
}
func (*UnimplementedLedgerServer) GetLatestBlockEpoch(ctx context.Context, req *LatestPNRequest) (*LatestPNResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatestBlockEpoch not implemented")
}

func RegisterLedgerServer(s *grpc.Server, srv LedgerServer) {
	s.RegisterService(&_Ledger_serviceDesc, srv)
}

func _Ledger_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitPulseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LedgerServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ledger.Ledger/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LedgerServer).Commit(ctx, req.(*CommitPulseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ledger_GetLatestBlockEpoch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LatestPNRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LedgerServer).GetLatestBlockEpoch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ledger.Ledger/GetLatestBlockEpoch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LedgerServer).GetLatestBlockEpoch(ctx, req.(*LatestPNRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ledger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ledger.Ledger",
	HandlerType: (*LedgerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Commit",
			Handler:    _Ledger_Commit_Handler,
		},
		{
			MethodName: "GetLatestBlockEpoch",
			Handler:    _Ledger_GetLatestBlockEpoch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ledger.proto",
}
