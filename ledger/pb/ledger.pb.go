// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ledger.proto

package ledger

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LatestBlockEpochRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatestBlockEpochRequest) Reset()         { *m = LatestBlockEpochRequest{} }
func (m *LatestBlockEpochRequest) String() string { return proto.CompactTextString(m) }
func (*LatestBlockEpochRequest) ProtoMessage()    {}
func (*LatestBlockEpochRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{0}
}

func (m *LatestBlockEpochRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatestBlockEpochRequest.Unmarshal(m, b)
}
func (m *LatestBlockEpochRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatestBlockEpochRequest.Marshal(b, m, deterministic)
}
func (m *LatestBlockEpochRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatestBlockEpochRequest.Merge(m, src)
}
func (m *LatestBlockEpochRequest) XXX_Size() int {
	return xxx_messageInfo_LatestBlockEpochRequest.Size(m)
}
func (m *LatestBlockEpochRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LatestBlockEpochRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LatestBlockEpochRequest proto.InternalMessageInfo

type LatestBlockEpochResponse struct {
	Epoch                uint64   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatestBlockEpochResponse) Reset()         { *m = LatestBlockEpochResponse{} }
func (m *LatestBlockEpochResponse) String() string { return proto.CompactTextString(m) }
func (*LatestBlockEpochResponse) ProtoMessage()    {}
func (*LatestBlockEpochResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{1}
}

func (m *LatestBlockEpochResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatestBlockEpochResponse.Unmarshal(m, b)
}
func (m *LatestBlockEpochResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatestBlockEpochResponse.Marshal(b, m, deterministic)
}
func (m *LatestBlockEpochResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatestBlockEpochResponse.Merge(m, src)
}
func (m *LatestBlockEpochResponse) XXX_Size() int {
	return xxx_messageInfo_LatestBlockEpochResponse.Size(m)
}
func (m *LatestBlockEpochResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LatestBlockEpochResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LatestBlockEpochResponse proto.InternalMessageInfo

func (m *LatestBlockEpochResponse) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *LatestBlockEpochResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type CommitRequest struct {
	Entropy              []byte   `protobuf:"bytes,2,opt,name=entropy,proto3" json:"entropy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitRequest) Reset()         { *m = CommitRequest{} }
func (m *CommitRequest) String() string { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()    {}
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{2}
}

func (m *CommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRequest.Unmarshal(m, b)
}
func (m *CommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRequest.Marshal(b, m, deterministic)
}
func (m *CommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRequest.Merge(m, src)
}
func (m *CommitRequest) XXX_Size() int {
	return xxx_messageInfo_CommitRequest.Size(m)
}
func (m *CommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRequest proto.InternalMessageInfo

func (m *CommitRequest) GetEntropy() []byte {
	if m != nil {
		return m.Entropy
	}
	return nil
}

type CommitResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitResponse) Reset()         { *m = CommitResponse{} }
func (m *CommitResponse) String() string { return proto.CompactTextString(m) }
func (*CommitResponse) ProtoMessage()    {}
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{3}
}

func (m *CommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitResponse.Unmarshal(m, b)
}
func (m *CommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitResponse.Marshal(b, m, deterministic)
}
func (m *CommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitResponse.Merge(m, src)
}
func (m *CommitResponse) XXX_Size() int {
	return xxx_messageInfo_CommitResponse.Size(m)
}
func (m *CommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitResponse proto.InternalMessageInfo

func (m *CommitResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*LatestBlockEpochRequest)(nil), "ledger.LatestBlockEpochRequest")
	proto.RegisterType((*LatestBlockEpochResponse)(nil), "ledger.LatestBlockEpochResponse")
	proto.RegisterType((*CommitRequest)(nil), "ledger.CommitRequest")
	proto.RegisterType((*CommitResponse)(nil), "ledger.CommitResponse")
}

func init() { proto.RegisterFile("ledger.proto", fileDescriptor_63585974d4c6a2c4) }

var fileDescriptor_63585974d4c6a2c4 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x08, 0x8c, 0x38, 0x0a, 0x83, 0xf9, 0xa8, 0xe9, 0x42, 0xe4, 0x01, 0x85, 0xc5, 0x03,
	0x4c, 0xac, 0x41, 0xc0, 0xd2, 0xa1, 0xf2, 0xc8, 0x56, 0xc2, 0xa9, 0x54, 0x24, 0x3d, 0x63, 0x1b,
	0x09, 0x7e, 0x0d, 0x7f, 0x15, 0xd5, 0x8e, 0xa5, 0x92, 0x2a, 0xe3, 0x7b, 0x7e, 0xef, 0x9d, 0xdf,
	0x1d, 0x8c, 0x1a, 0x7c, 0x5b, 0xa0, 0xd3, 0xd6, 0x51, 0x20, 0xc1, 0x13, 0x52, 0x97, 0x30, 0x9e,
	0xce, 0x03, 0xfa, 0x50, 0x35, 0x54, 0x7f, 0x3c, 0x5a, 0xaa, 0xdf, 0x0d, 0x7e, 0x7e, 0xa1, 0x0f,
	0xea, 0x09, 0xe4, 0xf6, 0x93, 0xb7, 0xb4, 0xf2, 0x28, 0xce, 0x60, 0x1f, 0xd7, 0x84, 0x64, 0x05,
	0x2b, 0xf7, 0x4c, 0x02, 0x91, 0x75, 0x8e, 0x9c, 0xdc, 0x2d, 0x58, 0x79, 0x68, 0x12, 0x50, 0x37,
	0x70, 0xfc, 0x40, 0x6d, 0xbb, 0x0c, 0x5d, 0xb0, 0x90, 0x70, 0x80, 0xab, 0xe0, 0xc8, 0xfe, 0x44,
	0xe1, 0xc8, 0x64, 0xa8, 0xae, 0xe1, 0x24, 0x4b, 0x37, 0x06, 0xc5, 0x48, 0xb6, 0x11, 0x79, 0xfb,
	0xcb, 0x80, 0x4f, 0x63, 0x01, 0x71, 0x0f, 0x3c, 0x59, 0xc4, 0xb9, 0xee, 0x1a, 0xfe, 0x9b, 0x36,
	0xb9, 0xe8, 0xd3, 0x29, 0x59, 0xed, 0x88, 0x17, 0x38, 0x7d, 0xc6, 0xd0, 0xef, 0x28, 0xae, 0xb2,
	0x61, 0x60, 0x31, 0x93, 0x62, 0x58, 0x90, 0xb3, 0xab, 0x12, 0xc6, 0x4b, 0xd2, 0x0b, 0x67, 0x6b,
	0x8d, 0xdf, 0xf3, 0xd6, 0x36, 0xe8, 0x3b, 0x57, 0x75, 0x94, 0x7e, 0x3e, 0x5b, 0xdf, 0x61, 0xc6,
	0x5e, 0x79, 0x3c, 0xc8, 0xdd, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x31, 0xd4, 0xb1, 0xa0,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LedgerClient is the client API for Ledger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LedgerClient interface {
	Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error)
	GetLatestBlockEpoch(ctx context.Context, in *LatestBlockEpochRequest, opts ...grpc.CallOption) (*LatestBlockEpochResponse, error)
}

type ledgerClient struct {
	cc *grpc.ClientConn
}

func NewLedgerClient(cc *grpc.ClientConn) LedgerClient {
	return &ledgerClient{cc}
}

func (c *ledgerClient) Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error) {
	out := new(CommitResponse)
	err := c.cc.Invoke(ctx, "/ledger.Ledger/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ledgerClient) GetLatestBlockEpoch(ctx context.Context, in *LatestBlockEpochRequest, opts ...grpc.CallOption) (*LatestBlockEpochResponse, error) {
	out := new(LatestBlockEpochResponse)
	err := c.cc.Invoke(ctx, "/ledger.Ledger/GetLatestBlockEpoch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LedgerServer is the server API for Ledger service.
type LedgerServer interface {
	Commit(context.Context, *CommitRequest) (*CommitResponse, error)
	GetLatestBlockEpoch(context.Context, *LatestBlockEpochRequest) (*LatestBlockEpochResponse, error)
}

// UnimplementedLedgerServer can be embedded to have forward compatible implementations.
type UnimplementedLedgerServer struct {
}

func (*UnimplementedLedgerServer) Commit(ctx context.Context, req *CommitRequest) (*CommitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Commit not implemented")
}
func (*UnimplementedLedgerServer) GetLatestBlockEpoch(ctx context.Context, req *LatestBlockEpochRequest) (*LatestBlockEpochResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatestBlockEpoch not implemented")
}

func RegisterLedgerServer(s *grpc.Server, srv LedgerServer) {
	s.RegisterService(&_Ledger_serviceDesc, srv)
}

func _Ledger_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LedgerServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ledger.Ledger/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LedgerServer).Commit(ctx, req.(*CommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ledger_GetLatestBlockEpoch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LatestBlockEpochRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LedgerServer).GetLatestBlockEpoch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ledger.Ledger/GetLatestBlockEpoch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LedgerServer).GetLatestBlockEpoch(ctx, req.(*LatestBlockEpochRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ledger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ledger.Ledger",
	HandlerType: (*LedgerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Commit",
			Handler:    _Ledger_Commit_Handler,
		},
		{
			MethodName: "GetLatestBlockEpoch",
			Handler:    _Ledger_GetLatestBlockEpoch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ledger.proto",
}
